<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shichimi.book.dao.TbBookDao">

    <resultMap type="com.shichimi.book.entity.TbBook" id="TbBookMap">
        <result property="idBook" column="ID_BOOK" jdbcType="VARCHAR"/>
        <result property="name" column="NAME" jdbcType="VARCHAR"/>
        <result property="author" column="AUTHOR" jdbcType="VARCHAR"/>
        <result property="publishDate" column="PUBLISH_DATE" jdbcType="TIMESTAMP"/>
        <result property="price" column="PRICE" jdbcType="NUMERIC"/>
        <result property="description" column="DESCRIPTION" jdbcType="VARCHAR"/>
        <result property="status" column="STATUS" jdbcType="VARCHAR"/>
        <result property="createBy" column="CREATE_BY" jdbcType="VARCHAR"/>
        <result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="UPDATE_BY" jdbcType="VARCHAR"/>
        <result property="updateDate" column="UPDATE_DATE" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column">
        ID_BOOK, NAME, AUTHOR, PUBLISH_DATE, PRICE, DESCRIPTION, STATUS, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="TbBookMap">
        select ID_BOOK,
               NAME,
               AUTHOR,
               PUBLISH_DATE,
               PRICE,
               DESCRIPTION,
               STATUS,
               CREATE_BY,
               CREATE_DATE,
               UPDATE_BY,
               UPDATE_DATE
        from SCOTT.TB_BOOK
        where ID_BOOK = #{idBook}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TbBookMap">
        select ID_BOOK,
               NAME,
               AUTHOR,
               PUBLISH_DATE,
               PRICE,
               DESCRIPTION,
               STATUS,
               CREATE_BY,
               CREATE_DATE,
               UPDATE_BY,
               UPDATE_DATE
        from SCOTT.TB_BOOK limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TbBookMap">
        select
        ID_BOOK, NAME, AUTHOR, PUBLISH_DATE, PRICE, DESCRIPTION, STATUS, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE
        from SCOTT.TB_BOOK
        <where>
            <if test="idBook != null and idBook != ''">
                and ID_BOOK = #{idBook}
            </if>
            <if test="name != null and name != ''">
                and NAME = #{name}
            </if>
            <if test="author != null and author != ''">
                and AUTHOR = #{author}
            </if>
            <if test="publishDate != null">
                and PUBLISH_DATE = #{publishDate}
            </if>
            <if test="price != null">
                and PRICE = #{price}
            </if>
            <if test="description != null and description != ''">
                and DESCRIPTION = #{description}
            </if>
            <if test="status != null and status != ''">
                and STATUS = #{status}
            </if>
            <if test="createBy != null and createBy != ''">
                and CREATE_BY = #{createBy}
            </if>
            <if test="createDate != null">
                and CREATE_DATE = #{createDate}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and UPDATE_BY = #{updateBy}
            </if>
            <if test="updateDate != null">
                and UPDATE_DATE = #{updateDate}
            </if>
        </where>
    </select>
    <select id="queryAllByFuzzy" resultMap="TbBookMap">
        select <include refid="Base_Column"/> from TB_BOOK
        <where>
            <if test="name != null and name != ''">
                and NAME like '%'||#{name}||'%'
            </if>
            <if test="author != null and author != ''">
                and AUTHOR like '%'||#{author}||'%'
            </if>
            <if test="description != null and description != ''">
                and DESCRIPTION like '%'||#{description}||'%'
            </if>
        </where>
    </select>
    <select id="queryByFuzzyAndPrice" resultMap="TbBookMap">
        select <include refid="Base_Column"/> from TB_BOOK
        <where>
            <if test="name != null and name != ''">
                and NAME like '%'||#{name}||'%'
            </if>
            <if test="author != null and author != ''">
                and AUTHOR like '%'||#{author}||'%'
            </if>
            <if test="priceLow != null and priceHigh !=null">
                and PRICE between #{priceLow} and #{priceHigh}
            </if>
            <choose>
                <when test="priceLow != null and priceHigh !=null">
                    and PRICE between #{priceLow} and #{priceHigh}
                </when>
                <when test="priceLow != null and priceHigh ==null">
                    and PRICE &gt;= #{priceLow}
                </when>
                <when test="priceLow == null and priceHigh != null">
                    and PRICE &lt;= #{priceHigh}
                </when>
            </choose>
            
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="idBook" useGeneratedKeys="true">
        insert into SCOTT.TB_BOOK(NAME, AUTHOR, PUBLISH_DATE, PRICE, DESCRIPTION, STATUS, CREATE_BY, CREATE_DATE,
                                  UPDATE_BY, UPDATE_DATE)
        values (#{name}, #{author}, #{publishDate}, #{price}, #{description}, #{status}, #{createBy}, #{createDate},
                #{updateBy}, #{updateDate})
    </insert>

    <insert id="insertBatch" keyProperty="idBook" useGeneratedKeys="true">
        insert into SCOTT.TB_BOOK(NAME, AUTHOR, PUBLISH_DATE, PRICE, DESCRIPTION, STATUS, CREATE_BY, CREATE_DATE,
        UPDATE_BY, UPDATE_DATE)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.author}, #{entity.publishDate}, #{entity.price}, #{entity.description},
            #{entity.status}, #{entity.createBy}, #{entity.createDate}, #{entity.updateBy}, #{entity.updateDate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="idBook" useGeneratedKeys="true">
        insert into SCOTT.TB_BOOK(NAME, AUTHOR, PUBLISH_DATE, PRICE, DESCRIPTION, STATUS, CREATE_BY, CREATE_DATE,
        UPDATE_BY, UPDATE_DATE)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.author}, #{entity.publishDate}, #{entity.price}, #{entity.description},
            #{entity.status}, #{entity.createBy}, #{entity.createDate}, #{entity.updateBy}, #{entity.updateDate})
        </foreach>
        on duplicate key update
        NAME = values(NAME) , AUTHOR = values(AUTHOR) , PUBLISH_DATE = values(PUBLISH_DATE) , PRICE = values(PRICE) ,
        DESCRIPTION = values(DESCRIPTION) , STATUS = values(STATUS) , CREATE_BY = values(CREATE_BY) , CREATE_DATE =
        values(CREATE_DATE) , UPDATE_BY = values(UPDATE_BY) , UPDATE_DATE = values(UPDATE_DATE)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update SCOTT.TB_BOOK
        <set>
            <if test="name != null and name != ''">
                NAME = #{name},
            </if>
            <if test="author != null and author != ''">
                AUTHOR = #{author},
            </if>
            <if test="publishDate != null">
                PUBLISH_DATE = #{publishDate},
            </if>
            <if test="price != null">
                PRICE = #{price},
            </if>
            <if test="description != null and description != ''">
                DESCRIPTION = #{description},
            </if>
            <if test="status != null and status != ''">
                STATUS = #{status},
            </if>
            <if test="createBy != null and createBy != ''">
                CREATE_BY = #{createBy},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate},
            </if>
            <if test="updateBy != null and updateBy != ''">
                UPDATE_BY = #{updateBy},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate},
            </if>
        </set>
        where ID_BOOK = #{idBook}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from SCOTT.TB_BOOK
        where ID_BOOK = #{idBook}
    </delete>

</mapper>

